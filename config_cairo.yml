## Synthetic population pipeline for Corsica
## based on the synpp package

# This is the path to a directory where the pipeline can store temporary data
working_directory: /data/cairo/cache

# This section defines which parts of the pipeline should be run
run:
  - synthesis.output # To create the output population in the output_path (see below)
  #- matsim.output # Uncomment, if you want to run the full simulation (you'll need Java for that)

aliases:
  data.spatial.municipalities: cairo.raw.boundary
  synthesis.population.enriched: cairo.cleaned.population
  synthesis.population.activities: cairo.cleaned.activities
  synthesis.population.trips: cairo.cleaned.trips
  synthesis.population.spatial.locations: cairo.locations.all
  synthesis.population.spatial.home.locations: cairo.cleaned.homes
  synthesis.locations.secondary: cairo.matsim.secondary_locations
  synthesis.population.spatial.primary.locations: cairo.matsim.primary_locations
  matsim.simulation.prepare: cairo.matsim.prepare

# Here the configuraiton of the pipeline starts
config:
  # Some general configuration
  processes: 4

  # Define whether to use ENTD or EGT as the household travel survey (HTS)
  hts: entd

  # Define sampling rate and random seed for the output population
  sampling_rate: 0.001
  random_seed: 1234

  # Paths to the input data and where the output should be stored
  data_path: /data/cairo/data
  output_path: /data/cairo/output
  output_prefix: cairo_

  # Only interesting if you run the simulation
  java_memory: 14G

  # Corsica settings
  regions: [94]
  gtfs_path: gtfs_cairo
  osm_path: osm_cairo

  crs: EPSG:22992

  cairo:
    boundary_path: data_cairo/tfc_gcr_bounds.geojson
    population_path: data_cairo/population+home-act.csv
    locations_path: data_cairo/activity-locations.gpkg
    sla_iterations: 1

  eqasim_branch: cairo
  eqasim_commit: 590eb2a4
