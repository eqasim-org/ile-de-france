name: Unit and integration tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: "adopt"
        java-version: "11"
    - uses: actions/cache@v2
      env:
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('environment.yml') }}
    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: "ile-de-france"
        environment-file: environment.yml
        python-version: "3.10"
        channels: conda-forge
    - name: Set up osmosis (Linux)
      if: matrix.os == 'ubuntu-latest'
      shell: bash -el {0}
      run: |
        wget https://github.com/openstreetmap/osmosis/releases/download/0.48.2/osmosis-0.48.2.tgz -O osmosis.tgz
        mkdir $HOME/osmosis
        tar xf osmosis.tgz -C $HOME/osmosis
        echo $HOME/osmosis/bin >> $GITHUB_PATH
    - name: Set up osmosis (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash -el {0}
      run: |
        powershell -command "& { iwr https://github.com/openstreetmap/osmosis/releases/download/0.48.2/osmosis-0.48.2.zip -OutFile osmosis.zip }"
        mkdir $HOME/osmosis
        unzip osmosis.zip -d $HOME/osmosis
        echo $HOME/osmosis/bin >> $GITHUB_PATH
    - name: Prepare git for Windows
      if: matrix.os == 'windows-latest'
      shell: bash -el {0}
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
        git config --system core.longpaths true
    - name: Test versions
      shell: bash -el {0}
      run: |
        java -version
        mvn -v
        python --version
        osmosis -v
        git --version
        python -c "import fiona"
    - name: Run pipeline tests
      shell: bash -el {0}
      run: |
        MKL_CBWR=AUTO pytest --strict tests/
